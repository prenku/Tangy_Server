@page "/lifecycle"

<PageTitle>LifeCycle</PageTitle>

<MudText Typo="Typo.h3" GutterBottom="true">Counter</MudText>
<MudText Class="mb-4">Current count: @currentCount</MudText>
<MudButton Color="Color.Primary" Variant="Variant.Filled" @onclick="IncrementCount">Click me</MudButton>
<TangyWeb_Client.Pages.LearnBlazor._LifeCycleChild></TangyWeb_Client.Pages.LearnBlazor._LifeCycleChild>
@foreach (var item in EventType)
{
    <MudText Class="mb-4">EventType: @item</MudText>

}

@code {
    private int currentCount = 0;
    private List<string> EventType = new List<string>();
    private void IncrementCount()
    {
        currentCount++;
    }
    protected override void OnInitialized()
    {
        EventType.Add("OnInitialized is called");
    }
    protected override async Task OnInitializedAsync()
    {
        EventType.Add("OnInitializedAsync is called");
        await Task.Delay(1000);
    }
    protected override void OnParametersSet ()
    {
        EventType.Add("OnParametersSet is called");
    }
    protected override async Task OnParametersSetAsync()
    {
        EventType.Add("OnParametersSetAsync is called");
        await Task.Delay(1000);
    }
}
